/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inventariois;

import inventariois.Conexion;
import inventariois.Conexion;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.export.ooxml.JRXlsxExporter;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.export.SimpleExporterInput;
import net.sf.jasperreports.export.SimpleOutputStreamExporterOutput;
import net.sf.jasperreports.export.SimpleXlsxReportConfiguration;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Strella Castro
 */
public class Clientes extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Clientes.class.getName());

    /**
     * Creates new form Clientes
     */
    public Clientes() {
        initComponents();
        
         cargarClientes(); // Load clients when the form starts

    tablaClientes.addMouseListener(new MouseAdapter() {
        @Override
        public void mouseClicked(MouseEvent e) {
            int fila = tablaClientes.getSelectedRow();
            if (fila >= 0) {
                txtID.setText(tablaClientes.getValueAt(fila, 0).toString());
                txtIdentidad.setText(tablaClientes.getValueAt(fila, 1).toString());
                txtNombre.setText(tablaClientes.getValueAt(fila, 2).toString());
                txtApellido.setText(tablaClientes.getValueAt(fila, 3).toString());
                txtTelefono.setText(tablaClientes.getValueAt(fila, 4).toString());
                txtPuntos.setText(tablaClientes.getValueAt(fila, 5).toString());
            }
        }
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtIdentidad = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        txtTelefono = new javax.swing.JTextField();
        btnAgregar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtPuntos = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaClientes = new javax.swing.JTable();
        btnSalir = new javax.swing.JButton();
        btnReporteCliente = new javax.swing.JButton();
        btnDescargarReporte = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Clientes"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("ID:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 44, 21, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Identidad:");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 84, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Nombre:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 124, -1, -1));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Apellido:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 164, -1, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Telefono:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 212, -1, -1));

        txtID.setEditable(false);
        jPanel1.add(txtID, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 44, 130, -1));
        jPanel1.add(txtIdentidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 84, 264, -1));
        jPanel1.add(txtNombre, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 124, 264, -1));
        jPanel1.add(txtApellido, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 164, 264, -1));
        jPanel1.add(txtTelefono, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 212, 264, -1));

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/guardar-carpeta.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(btnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(467, 61, -1, -1));

        btnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/Edit.png"))); // NOI18N
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEditar, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 61, 118, -1));

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/desactivado.png"))); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(467, 204, -1, -1));

        btnBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/buscar.png"))); // NOI18N
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });
        jPanel1.add(btnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(467, 129, -1, -1));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Puntos:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(28, 246, -1, -1));

        txtPuntos.setEditable(false);
        jPanel1.add(txtPuntos, new org.netbeans.lib.awtextra.AbsoluteConstraints(107, 246, 264, -1));

        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/Refresh.png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jPanel1.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(593, 129, -1, -1));
        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 0, 0));

        tablaClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Identidad", "Nombre", "Apellido", "Telefono", "Puntos"
            }
        ));
        jScrollPane2.setViewportView(tablaClientes);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 294, 914, 201));

        btnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/Export_2.png"))); // NOI18N
        btnSalir.setText("Salir");
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(594, 204, 117, -1));

        btnReporteCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/Invoice_1.png"))); // NOI18N
        btnReporteCliente.setText("Reportes");
        btnReporteCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteClienteActionPerformed(evt);
            }
        });
        jPanel1.add(btnReporteCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 60, -1, -1));

        btnDescargarReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/Downloading Updates.png"))); // NOI18N
        btnDescargarReporte.setText(" D.Reporte");
        btnDescargarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargarReporteActionPerformed(evt);
            }
        });
        jPanel1.add(btnDescargarReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 130, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 0, 950, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
                                       
        Conexion conexion = new Conexion();
    Connection con = conexion.estableceConexion();

    String identidad = txtIdentidad.getText();
    String nombre = txtNombre.getText();
    String apellido = txtApellido.getText();
    String telefono = txtTelefono.getText();
    String puntos = "0"; 

    String sql = "INSERT INTO clientes (identidad, nombre, apellido, telefono, puntos) VALUES (?, ?, ?, ?, ?)";

    try {
        PreparedStatement pst = con.prepareStatement(sql);

        
        pst.setString(1, identidad);
        pst.setString(2, nombre);
        pst.setString(3, apellido);
        pst.setString(4, telefono);
        pst.setString(5, puntos); 

        int filasAfectadas = pst.executeUpdate();

        if (filasAfectadas > 0) {
            JOptionPane.showMessageDialog(null, "Cliente agregado correctamente");
            cargarClientes(); 
        } else {
            JOptionPane.showMessageDialog(null, "Error al agregar Cliente");
        }

        con.close();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al agregar Cliente: " + e.toString());
        e.printStackTrace(); 
    }

    txtNombre.setText("");
    txtApellido.setText("");
    txtTelefono.setText("");
    txtIdentidad.setText("");
    txtPuntos.setText("");                               
       

        
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnReporteClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteClienteActionPerformed
        // TODO add your handling code here:
        try {
           InputStream jasperStream = getClass().getResourceAsStream("/Reportes/ReporteClientes.jasper");
    
     
         if (jasperStream == null) {
             throw new RuntimeException("No se encontró el archivo ReporteClientes.jasper en el classpath.");
    }

           JasperReport reporte = (JasperReport) JRLoader.loadObject(jasperStream);
           Connection conn = new Conexion().estableceConexion();
 
           JasperPrint print = JasperFillManager.fillReport(reporte, null, conn);
           JasperViewer viewer = new JasperViewer(print, false);
           viewer.setTitle("Reporte completo de Clientes");
           viewer.setVisible(true);
        } catch (Exception e) {
                e.printStackTrace();
           JOptionPane.showMessageDialog(this, "Error al mostrar el reporte: " + e.getMessage());
}
    }//GEN-LAST:event_btnReporteClienteActionPerformed

    private void btnDescargarReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargarReporteActionPerformed
        // TODO add your handling code here:
         Object[] opciones = {"PDF", "Excel"};
        int opcion = JOptionPane.showOptionDialog(null,
            "¿Desea descargar el reporte en PDF o Excel?",
            "Descargar Reporte",
            JOptionPane.DEFAULT_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            opciones,
            opciones[0]);

        if (opcion == 0) {
            generarReportePDF();  
        } else if (opcion == 1) {
            generarReporteExcel(); 
        }
    }//GEN-LAST:event_btnDescargarReporteActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        
        Conexion conexion = new Conexion();
    Connection con = conexion.estableceConexion();

    // Check if an ID is selected
    if (txtID.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Seleccione un cliente de la tabla para eliminar.");
        return;
    }

    int id = Integer.parseInt(txtID.getText());

    int confirmacion = JOptionPane.showConfirmDialog(null, "¿Está seguro de que desea eliminar este cliente?", "Confirmar Eliminación", JOptionPane.YES_NO_OPTION);

    if (confirmacion == JOptionPane.YES_OPTION) {
        String sql = "DELETE FROM clientes WHERE id=?";

        try {
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setInt(1, id);

            int filasAfectadas = pst.executeUpdate();

            if (filasAfectadas > 0) {
                JOptionPane.showMessageDialog(null, "Cliente eliminado correctamente");
                cargarClientes(); // Refresh the table
                limpiarCampos(); // Clear the text fields after deletion
            } else {
                JOptionPane.showMessageDialog(null, "Error al eliminar Cliente o el Cliente no existe.");
            }

            con.close();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Error de formato en ID: Asegúrese de que sea un número válido. " + e.getMessage());
            e.printStackTrace();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al eliminar Cliente: " + e.toString());
            e.printStackTrace();
        }
    }        
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        // TODO add your handling code here:
        
        Conexion conexion = new Conexion();
    Connection con = conexion.estableceConexion();

    // Check if an ID is selected
    if (txtID.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Seleccione un cliente de la tabla para editar.");
        return;
    }

    int id = Integer.parseInt(txtID.getText());
    String identidad = txtIdentidad.getText();
    String nombre = txtNombre.getText();
    String apellido = txtApellido.getText();
    String telefono = txtTelefono.getText();
    int puntos = Integer.parseInt(txtPuntos.getText()); // Assuming puntos is an integer

    String sql = "UPDATE clientes SET identidad=?, nombre=?, apellido=?, telefono=?, puntos=? WHERE id=?";

    try {
        PreparedStatement pst = con.prepareStatement(sql);
        pst.setString(1, identidad);
        pst.setString(2, nombre);
        pst.setString(3, apellido);
        pst.setString(4, telefono);
        pst.setInt(5, puntos);
        pst.setInt(6, id);

        int filasAfectadas = pst.executeUpdate();

        if (filasAfectadas > 0) {
            JOptionPane.showMessageDialog(null, "Cliente actualizado correctamente");
            cargarClientes(); // Refresh the table
            limpiarCampos(); // Clear the text fields after update
        } else {
            JOptionPane.showMessageDialog(null, "Error al actualizar Cliente o el Cliente no existe.");
        }

        con.close();
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(null, "Error de formato en ID o Puntos: Asegúrese de que sean números válidos. " + e.getMessage());
        e.printStackTrace();
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Error al editar Cliente: " + e.toString());
        e.printStackTrace();
    }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        
    Conexion conexion = new Conexion();
    Connection con = conexion.estableceConexion();

    String searchTerm = JOptionPane.showInputDialog(null, "Ingrese el ID, Identidad o Nombre del cliente a buscar:");

    if (searchTerm != null && !searchTerm.trim().isEmpty()) {
        DefaultTableModel modelo = (DefaultTableModel) tablaClientes.getModel();
        modelo.setRowCount(0); // Clear existing rows

        String sql = "SELECT id, identidad, nombre, apellido, telefono, puntos FROM clientes WHERE id LIKE ? OR identidad LIKE ? OR nombre LIKE ? ORDER BY id DESC";

        try {
            PreparedStatement pst = con.prepareStatement(sql);
            pst.setString(1, "%" + searchTerm + "%");
            pst.setString(2, "%" + searchTerm + "%");
            pst.setString(3, "%" + searchTerm + "%");

            ResultSet rs = pst.executeQuery();

            boolean found = false;
            while (rs.next()) {
                found = true;
                Object[] fila = {
                    rs.getInt("id"),
                    rs.getString("identidad"),
                    rs.getString("nombre"),
                    rs.getString("apellido"),
                    rs.getString("telefono"),
                    rs.getInt("puntos")
                };
                modelo.addRow(fila);
            }

            if (!found) {
                JOptionPane.showMessageDialog(null, "No se encontraron clientes con el criterio de búsqueda.");
            }

            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al buscar Clientes: " + e.toString());
            e.printStackTrace();
        }
    } else {
        cargarClientes(); // If search term is empty, reload all clients
    }

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        
        cargarClientes(); // Simply call the method to refresh the table
    limpiarCampos(); // Clear fields after refreshing
    JOptionPane.showMessageDialog(null, "La tabla de clientes ha sido actualizada.");
    }                                             

    
    private void limpiarCampos() {
    txtID.setText("");
    txtIdentidad.setText("");
    txtNombre.setText("");
    txtApellido.setText("");
    txtTelefono.setText("");
    txtPuntos.setText(""); // Or set to "0" if points are always 0 initially
    }//GEN-LAST:event_btnActualizarActionPerformed

    public void generarReportePDF() {
    try {
        Connection conn = new Conexion().estableceConexion();
        InputStream rutaReporte = getClass().getResourceAsStream("/Reportes/ReporteClientes.jasper");
        JasperReport reporte = (JasperReport) JRLoader.loadObject(rutaReporte);

        JasperPrint print = JasperFillManager.fillReport(reporte, null, conn);

        String rutaSalida = "ReporteClientes.pdf";
        JasperExportManager.exportReportToPdfFile(print, rutaSalida);

        JOptionPane.showMessageDialog(null, "Reporte PDF generado correctamente en: " + rutaSalida);

    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error al generar el reporte PDF.");
    }
}
    public void generarReporteExcel() {
    try {
        Connection conn = new Conexion().estableceConexion();
        InputStream rutaReporte = getClass().getResourceAsStream("/Reportes/ReporteClientes.jasper");
        JasperReport reporte = (JasperReport) JRLoader.loadObject(rutaReporte);

        JasperPrint print = JasperFillManager.fillReport(reporte, null, conn);

        JRXlsxExporter exporter = new JRXlsxExporter();
        exporter.setExporterInput(new SimpleExporterInput(print));
        exporter.setExporterOutput(new SimpleOutputStreamExporterOutput("ReporteClientes.xlsx"));

        SimpleXlsxReportConfiguration config = new SimpleXlsxReportConfiguration();
        config.setOnePagePerSheet(false);
        config.setDetectCellType(true);
        config.setCollapseRowSpan(false);

        exporter.setConfiguration(config);
        exporter.exportReport();

        JOptionPane.showMessageDialog(null, "Reporte Excel generado correctamente en: ReporteClientes.xlsx");

    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error al generar el reporte Excel.");
    }
}
    
     private void cargarClientes() {
        Connection con = new Conexion().estableceConexion();

        DefaultTableModel modelo = (DefaultTableModel) tablaClientes.getModel();
        modelo.setRowCount(0);

        String sql = "SELECT id, identidad, nombre, apellido, telefono, puntos FROM clientes ORDER BY id DESC";

        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(sql);

            while (rs.next()) {
                Object[] fila = {
                    rs.getInt("id"),
                    rs.getString("identidad"),
                    rs.getString("nombre"),
                    rs.getString("apellido"),
                    rs.getString("telefono"),
                    rs.getString("puntos"),
                };
                modelo.addRow(fila);
            }

            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al cargar Clientes: " + e.toString());
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Clientes().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnDescargarReporte;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnReporteCliente;
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tablaClientes;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtIdentidad;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPuntos;
    private javax.swing.JTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
