/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inventariois;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.export.ooxml.JRXlsxExporter;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.export.SimpleExporterInput;
import net.sf.jasperreports.export.SimpleOutputStreamExporterOutput;
import net.sf.jasperreports.export.SimpleXlsxReportConfiguration;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Yohana Padilla
 */
public class Categorias extends javax.swing.JFrame {

    /**
     * Creates new form Unidades
     */
    public Categorias() {
        initComponents();
        generarID();
        cargarDatosTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtnActualizar = new javax.swing.JButton();
        jBtnCancelar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jTFCodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTFCategoria = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTFDescripcion = new javax.swing.JTextField();
        jBtnAgregar = new javax.swing.JButton();
        jBtnDesactivar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaCAT = new javax.swing.JTable();
        btnReportes = new javax.swing.JButton();
        btnDescargarReporte = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sistema de Inventario");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jBtnActualizar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jBtnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/transaccion.png"))); // NOI18N
        jBtnActualizar.setText("Actualizar");
        jBtnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, -1, -1));

        jBtnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jBtnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/desactivado.png"))); // NOI18N
        jBtnCancelar.setText("Cancelar");
        jBtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 160, -1, -1));

        jPanel4.setBackground(new java.awt.Color(255, 204, 255));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("GESTION DE CATEGORIAS");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(332, 332, 332)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(395, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, -1));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("ID:");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(95, 44, -1, -1));

        jTFCodigo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jTFCodigo.setEnabled(false);
        jTFCodigo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTFCodigoActionPerformed(evt);
            }
        });
        getContentPane().add(jTFCodigo, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 44, 160, -1));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel2.setText("Categoria:");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 88, -1, -1));

        jTFCategoria.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(jTFCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 82, 500, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Descripcion:");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(85, 120, -1, -1));

        jTFDescripcion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        getContentPane().add(jTFDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(243, 114, 500, -1));

        jBtnAgregar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jBtnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/guardar-carpeta.png"))); // NOI18N
        jBtnAgregar.setText("Agregar");
        jBtnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAgregarActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, -1, -1));

        jBtnDesactivar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jBtnDesactivar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/nota.png"))); // NOI18N
        jBtnDesactivar.setText("Desactivar");
        jBtnDesactivar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDesactivarActionPerformed(evt);
            }
        });
        getContentPane().add(jBtnDesactivar, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 160, -1, -1));

        tablaCAT.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Categoria", "Descripcion", "Activo"
            }
        ));
        tablaCAT.setRowHeight(25);
        tablaCAT.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaCATMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablaCAT);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 203, 870, 328));

        btnReportes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/Invoice_1.png"))); // NOI18N
        btnReportes.setText("Reportes");
        btnReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportesActionPerformed(evt);
            }
        });
        getContentPane().add(btnReportes, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 160, -1, -1));

        btnDescargarReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/Downloading Updates.png"))); // NOI18N
        btnDescargarReporte.setText("D. Reporte");
        btnDescargarReporte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargarReporteActionPerformed(evt);
            }
        });
        getContentPane().add(btnDescargarReporte, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 160, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void generarID() {
        try (Connection conn = new Conexion().estableceConexion();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery("SELECT MAX(idcategorias) AS max_id FROM Categorias")) {
            
            if (rs.next()) {
                int maxId = rs.getInt("max_id");
                jTFCodigo.setText(String.valueOf(maxId + 1)); // Incrementar el ID
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al generar ID: " + e.getMessage());
        }
    }
    
    private void cargarDatosTabla() {
        DefaultTableModel model = (DefaultTableModel) tablaCAT.getModel();
        model.setRowCount(0); // Limpiar la tabla

        try (Connection conn = new Conexion().estableceConexion();
             Statement stmt = conn.createStatement();
             ResultSet rs = stmt.executeQuery("SELECT * FROM Categorias")) { // Cargar todas las unidades

            while (rs.next()) {
                model.addRow(new Object[]{
                    rs.getInt("idcategorias"),
                    rs.getString("categoria"),
                    rs.getString("descripcion"),
                    rs.getBoolean("activo") ? "Sí" : "No" // Convertir booleano a "Sí" o "No"
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al cargar datos: " + e.getMessage());
        }
    }
    
    private void jBtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_jBtnCancelarActionPerformed

    private void jTFCodigoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTFCodigoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFCodigoActionPerformed

    private void jBtnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnActualizarActionPerformed
        String categoria = jTFCategoria.getText();
        String descripcion = jTFDescripcion.getText();
        
        if (categoria.isEmpty() || descripcion.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try (Connection conn = new Conexion().estableceConexion();
             PreparedStatement pstmt = conn.prepareStatement("UPDATE Categorias SET categoria = ?, descripcion = ? WHERE idcategoria = ?")) {
            
            pstmt.setString(1, categoria);
            pstmt.setString(2, descripcion);
            pstmt.setInt(3, Integer.parseInt(jTFCodigo.getText()));
            
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Categoria actualizada con éxito.");
            cargarDatosTabla(); // Recargar datos en la tabla
            jTFDescripcion.setText("");
            jTFCategoria.setText("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al actualizar categoria: " + e.getMessage());
        }
    }//GEN-LAST:event_jBtnActualizarActionPerformed

    private void jBtnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAgregarActionPerformed
        String categoria = jTFCategoria.getText();
        String descripcion = jTFDescripcion.getText();
        
        if (categoria.isEmpty() || descripcion.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try (Connection conn = new Conexion().estableceConexion();
             PreparedStatement pstmt = conn.prepareStatement("INSERT INTO categorias (idcategoria, categoria, descripcion, activo) VALUES (?, ?, ?, ?)")) {
            
            pstmt.setInt(1, Integer.parseInt(jTFCodigo.getText()));
            pstmt.setString(2, categoria);
            pstmt.setString(3, descripcion);
            pstmt.setBoolean(4, true); // Activo por defecto
            
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Categoria agregada con éxito.");
            cargarDatosTabla(); // Recargar datos en la tabla
            generarID(); // Generar nuevo ID
            jTFDescripcion.setText("");
            jTFCategoria.setText("");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al agregar categoria: " + e.getMessage());
        }
    }//GEN-LAST:event_jBtnAgregarActionPerformed

    private void jBtnDesactivarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDesactivarActionPerformed
        int row = tablaCAT.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una categoria para desactivar.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        int id = Integer.parseInt(tablaCAT.getValueAt(row, 0).toString());
        
        try (Connection conn = new Conexion().estableceConexion();
             PreparedStatement pstmt = conn.prepareStatement("UPDATE Categorias SET activo = false WHERE idcategoria = ?")) {
            
            pstmt.setInt(1, id);
            pstmt.executeUpdate();
            JOptionPane.showMessageDialog(this, "Categoria desactivada con éxito.");
            cargarDatosTabla(); // Recargar datos en la tabla
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al desactivar categoria: " + e.getMessage());
        }
    }//GEN-LAST:event_jBtnDesactivarActionPerformed

    private void tablaCATMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaCATMouseClicked
        int row = tablaCAT.getSelectedRow();
        if (row != -1) {
            // Obtener los valores de la fila seleccionada
            jTFCodigo.setText(tablaCAT.getValueAt(row, 0).toString());
            jTFCategoria.setText(tablaCAT.getValueAt(row, 1).toString());
            jTFDescripcion.setText(tablaCAT.getValueAt(row, 2).toString());
        }
    }//GEN-LAST:event_tablaCATMouseClicked

    private void btnReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportesActionPerformed
        // TODO add your handling code here:
         try {
           InputStream jasperStream = getClass().getResourceAsStream("/Reportes/ReporteCategoria.jasper");
    
     
         if (jasperStream == null) {
             throw new RuntimeException("No se encontró el archivo ReporteCategoria.jasper en el classpath.");
    }

           JasperReport reporte = (JasperReport) JRLoader.loadObject(jasperStream);
           Connection conn = new Conexion().estableceConexion();
 
           JasperPrint print = JasperFillManager.fillReport(reporte, null, conn);
           JasperViewer viewer = new JasperViewer(print, false);
           viewer.setTitle("Reporte completo de Categorias");
           viewer.setVisible(true);
        } catch (Exception e) {
                e.printStackTrace();
           JOptionPane.showMessageDialog(this, "Error al mostrar el reporte: " + e.getMessage());
}
    }//GEN-LAST:event_btnReportesActionPerformed

    private void btnDescargarReporteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargarReporteActionPerformed
        // TODO add your handling code here:
        Object[] opciones = {"PDF", "Excel"};
        int opcion = JOptionPane.showOptionDialog(null,
            "¿Desea descargar el reporte en PDF o Excel?",
            "Descargar Reporte",
            JOptionPane.DEFAULT_OPTION,
            JOptionPane.QUESTION_MESSAGE,
            null,
            opciones,
            opciones[0]);

        if (opcion == 0) {
            generarReportePDF();  
        } else if (opcion == 1) {
            generarReporteExcel(); 
        }
    }//GEN-LAST:event_btnDescargarReporteActionPerformed

    public void generarReportePDF() {
    try {
        Connection conn = new Conexion().estableceConexion();
        InputStream rutaReporte = getClass().getResourceAsStream("/Reportes/ReporteCategoria.jasper");
        JasperReport reporte = (JasperReport) JRLoader.loadObject(rutaReporte);

        JasperPrint print = JasperFillManager.fillReport(reporte, null, conn);

        String rutaSalida = "ReporteCategoria.pdf";
        JasperExportManager.exportReportToPdfFile(print, rutaSalida);

        JOptionPane.showMessageDialog(null, "Reporte PDF generado correctamente en: " + rutaSalida);

    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error al generar el reporte PDF.");
    }
}
    
    public void generarReporteExcel() {
    try {
        Connection conn = new Conexion().estableceConexion();
        InputStream rutaReporte = getClass().getResourceAsStream("/Reportes/ReporteCategoria.jasper");
        JasperReport reporte = (JasperReport) JRLoader.loadObject(rutaReporte);

        JasperPrint print = JasperFillManager.fillReport(reporte, null, conn);

        JRXlsxExporter exporter = new JRXlsxExporter();
        exporter.setExporterInput(new SimpleExporterInput(print));
        exporter.setExporterOutput(new SimpleOutputStreamExporterOutput("ReporteCategoria.xlsx"));

        SimpleXlsxReportConfiguration config = new SimpleXlsxReportConfiguration();
        config.setOnePagePerSheet(false);
        config.setDetectCellType(true);
        config.setCollapseRowSpan(false);

        exporter.setConfiguration(config);
        exporter.exportReport();

        JOptionPane.showMessageDialog(null, "Reporte Excel generado correctamente en: ReporteCategoria.xlsx");

    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(null, "Error al generar el reporte Excel.");
    }
}
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Categorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Categorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Categorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Categorias.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Categorias().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDescargarReporte;
    private javax.swing.JButton btnReportes;
    private javax.swing.JButton jBtnActualizar;
    private javax.swing.JButton jBtnAgregar;
    private javax.swing.JButton jBtnCancelar;
    private javax.swing.JButton jBtnDesactivar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFCategoria;
    private javax.swing.JTextField jTFCodigo;
    private javax.swing.JTextField jTFDescripcion;
    private javax.swing.JTable tablaCAT;
    // End of variables declaration//GEN-END:variables
}
