/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package inventariois;

import java.io.InputStream;
import java.sql.Connection;
import java.sql.*;
import javax.swing.JOptionPane;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.export.ooxml.JRXlsxExporter;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.export.SimpleExporterInput;
import net.sf.jasperreports.export.SimpleOutputStreamExporterOutput;
import net.sf.jasperreports.export.SimpleXlsxReportConfiguration;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Yohana Padilla
 */
public class Transacciones extends javax.swing.JFrame {
    
    /**
     * Creates new form Unidades
     */
    public Transacciones() {
        initComponents();
        cargarproducto();
    }
    
    private int idCodigoSeleccionado;
    Connection conn = null;

    private void guardarDatos() {
        Connection conn = null; // Mover la declaración aquí
        try {
            conn = new Conexion().estableceConexion(); // Establecer la conexión aquí

            // Guardar datos en la tabla movimientos
            String sqlInsert = "INSERT INTO movimientos (idcodigos, fecha, tipomovimiento, cantidad) VALUES (?, CURRENT_TIMESTAMP, ?, ?)";
            PreparedStatement stmt = conn.prepareStatement(sqlInsert);
            stmt.setInt(1, this.idCodigoSeleccionado); // Usar el idcodigos
            stmt.setString(2, (String) this.cboTransaccion.getSelectedItem()); // Tipo de movimiento
            stmt.setInt(3, (Integer) this.spinnerUno.getValue()); // Cantidad
            stmt.executeUpdate();

            // Actualizar el campo existencia en la tabla codigos
            String tipoMovimiento = (String) this.cboTransaccion.getSelectedItem();
            int cantidad = (Integer) this.spinnerUno.getValue();

            String sqlUpdate = "UPDATE codigos SET existencia = existencia " + (tipoMovimiento.equals("Entrada") ? "+" : "-") + " ? WHERE idcodigos = ?";
            PreparedStatement updateStmt = conn.prepareStatement(sqlUpdate);
            updateStmt.setInt(1, cantidad);
            updateStmt.setInt(2, this.idCodigoSeleccionado);
            updateStmt.executeUpdate();

            JOptionPane.showMessageDialog(this, "Datos guardados correctamente");
            limpiarFormulario(); // Limpiar el formulario después de guardar
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al guardar: " + e.getMessage());
        } finally {
            if (conn != null) {
                try {
                    conn.close(); // Asegúrate de cerrar la conexión
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Error al cerrar la conexión: " + e.getMessage());
                }
            }
        }
    }

    private void limpiarFormulario() {
        txtDescripcion.setText("");
        this.spinnerUno.setValue(0);
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cboItems = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        spinnerUno = new javax.swing.JSpinner();
        txtDescripcion = new javax.swing.JTextField();
        cboTransaccion = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnReporteSalida = new javax.swing.JButton();
        btnReporteEntrada = new javax.swing.JButton();
        btnReportes = new javax.swing.JButton();
        btnDescargarReportes = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Sistema de Inventario");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204), 2));

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("SKU:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 25, -1, -1));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel3.setText("Descripcion:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 63, -1, -1));

        cboItems.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboItems.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboItems.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboItemsItemStateChanged(evt);
            }
        });
        cboItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboItemsActionPerformed(evt);
            }
        });
        jPanel1.add(cboItems, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 1, 385, 40));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("Cantidad:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(96, 126, -1, -1));

        spinnerUno.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jPanel1.add(spinnerUno, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 119, 203, 34));

        txtDescripcion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtDescripcion.setEnabled(false);
        jPanel1.add(txtDescripcion, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 63, 385, 38));

        cboTransaccion.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cboTransaccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Entrada", "Salida" }));
        jPanel1.add(cboTransaccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(183, 218, 203, 35));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Transaccion:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 225, -1, -1));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 911, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 358, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 50, -1, -1));

        btnGuardar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/guardar-carpeta.png"))); // NOI18N
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardar, new org.netbeans.lib.awtextra.AbsoluteConstraints(646, 433, -1, -1));

        btnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/desactivado.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        getContentPane().add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(807, 433, -1, -1));

        jPanel2.setBackground(new java.awt.Color(255, 204, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("TRANSACCIONES");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(382, 382, 382)
                .addComponent(jLabel2)
                .addContainerGap(446, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 943, -1));

        btnReporteSalida.setText("Reporte SA");
        btnReporteSalida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteSalidaActionPerformed(evt);
            }
        });
        getContentPane().add(btnReporteSalida, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 440, -1, -1));

        btnReporteEntrada.setText("Reporte EN");
        btnReporteEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReporteEntradaActionPerformed(evt);
            }
        });
        getContentPane().add(btnReporteEntrada, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 440, -1, -1));

        btnReportes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/Invoice_1.png"))); // NOI18N
        btnReportes.setText("Reportes");
        btnReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReportesActionPerformed(evt);
            }
        });
        getContentPane().add(btnReportes, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 430, -1, -1));

        btnDescargarReportes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/recursos/Downloading Updates.png"))); // NOI18N
        btnDescargarReportes.setText("Descargar R");
        btnDescargarReportes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDescargarReportesActionPerformed(evt);
            }
        });
        getContentPane().add(btnDescargarReportes, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 430, -1, -1));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        guardarDatos();
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
    }//GEN-LAST:event_formWindowOpened

    private void cboItemsItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboItemsItemStateChanged
        Connection conn = null;
        try {
            conn = new Conexion().estableceConexion();
            String sql = "SELECT idcodigos, descripcion FROM codigos WHERE sku = ?";
            PreparedStatement pstmt = conn.prepareStatement(sql);

            String skuSeleccionado = (String) cboItems.getSelectedItem(); 
            pstmt.setString(1, skuSeleccionado); 

            ResultSet rs = pstmt.executeQuery();

            if (rs.next()) {
                txtDescripcion.setText(rs.getString("descripcion"));
                // Guardar el idcodigos en un atributo de la clase
                this.idCodigoSeleccionado = rs.getInt("idcodigos");
            }
            rs.close();
            pstmt.close();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error al obtener datos: " + e.getMessage());
        } finally {
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(this, "Error al cerrar la conexión: " + e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_cboItemsItemStateChanged

    private void cboItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboItemsActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cboItemsActionPerformed

    private void btnReporteEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteEntradaActionPerformed
        // TODO add your handling code here:
         int opcion = JOptionPane.showOptionDialog(
        null,
        "¿Qué tipo de entrada desea visualizar?",
        "Filtro de Reporte",
        JOptionPane.DEFAULT_OPTION,
        JOptionPane.QUESTION_MESSAGE,
        null,
        new String[] {"Por fecha", "Todas"},
        "Todas"
    );

    Connection conn = new Conexion().estableceConexion();

    if (opcion == 0) { // Por fecha
        String fechaStr = JOptionPane.showInputDialog("Ingrese la fecha (YYYY-MM-DD):");
        if (fechaStr != null && !fechaStr.trim().isEmpty()) {
            try {
                java.sql.Date fecha = java.sql.Date.valueOf(fechaStr.trim());
                Map<String, Object> parametros = new HashMap<>();
                parametros.put("fecha", fecha);

                InputStream jasperStream = getClass().getResourceAsStream("/Reportes/ReporteMovimientoFE.jasper");
                JasperReport reporte = (JasperReport) JRLoader.loadObject(jasperStream);

                JasperPrint print = JasperFillManager.fillReport(reporte, parametros, conn);
                JasperViewer viewer = new JasperViewer(print, false);
                viewer.setTitle("Reporte por Fecha de Movimiento");
                viewer.setVisible(true);

            } catch (IllegalArgumentException ex) {
                JOptionPane.showMessageDialog(null, "Formato de fecha inválido. Use YYYY-MM-DD");
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error al generar el reporte.");
            }
        }
    } else if (opcion == 1) { // Todas
        try {
            InputStream jasperStream = getClass().getResourceAsStream("/Reportes/ReporteMovimientoET.jasper");
            JasperReport reporte = (JasperReport) JRLoader.loadObject(jasperStream);

            JasperPrint print = JasperFillManager.fillReport(reporte, null, conn);
            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setTitle("Reporte completo de Movimiento");
            viewer.setVisible(true);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al generar el reporte.");
        }
    }

    }//GEN-LAST:event_btnReporteEntradaActionPerformed

    private void btnReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReportesActionPerformed
        // TODO add your handling code here:
        try {
           InputStream jasperStream = getClass().getResourceAsStream("/Reportes/ReporteMovimientoEN.jasper");
    
     
         if (jasperStream == null) {
             throw new RuntimeException("No se encontró el archivo ReporteMovimientoEN.jasper en el classpath.");
    }

           JasperReport reporte = (JasperReport) JRLoader.loadObject(jasperStream);
           Connection conn = new Conexion().estableceConexion();
 
           JasperPrint print = JasperFillManager.fillReport(reporte, null, conn);
           JasperViewer viewer = new JasperViewer(print, false);
           viewer.setTitle("Reporte completo de Movimiento");
           viewer.setVisible(true);
        } catch (Exception e) {
                e.printStackTrace();
           JOptionPane.showMessageDialog(this, "Error al mostrar el reporte: " + e.getMessage());
}
    }//GEN-LAST:event_btnReportesActionPerformed

    private void btnReporteSalidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReporteSalidaActionPerformed
        // TODO add your handling code here:
         int opcion = JOptionPane.showOptionDialog(
        null,
        "¿Qué tipo de salida desea visualizar?",
        "Filtro de Reporte",
        JOptionPane.DEFAULT_OPTION,
        JOptionPane.QUESTION_MESSAGE,
        null,
        new String[] {"Por fecha", "Todas"},
        "Todas"
    );

    Connection conn = new Conexion().estableceConexion();

    if (opcion == 0) { // Por fecha
        String fechaStr = JOptionPane.showInputDialog("Ingrese la fecha (YYYY-MM-DD):");
        if (fechaStr != null && !fechaStr.trim().isEmpty()) {
            try {
                java.sql.Date fecha = java.sql.Date.valueOf(fechaStr.trim());
                Map<String, Object> parametros = new HashMap<>();
                parametros.put("fecha", fecha);

                InputStream jasperStream = getClass().getResourceAsStream("/Reportes/ReporteMovimientoFS.jasper");
                JasperReport reporte = (JasperReport) JRLoader.loadObject(jasperStream);

                JasperPrint print = JasperFillManager.fillReport(reporte, parametros, conn);
                JasperViewer viewer = new JasperViewer(print, false);
                viewer.setTitle("Reporte por Fecha de Movimiento");
                viewer.setVisible(true);

            } catch (IllegalArgumentException ex) {
                JOptionPane.showMessageDialog(null, "Formato de fecha inválido. Use YYYY-MM-DD");
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Error al generar el reporte.");
            }
        }
    } else if (opcion == 1) { // Todas
        try {
            InputStream jasperStream = getClass().getResourceAsStream("/Reportes/ReporteMovimientoSA.jasper");
            JasperReport reporte = (JasperReport) JRLoader.loadObject(jasperStream);

            JasperPrint print = JasperFillManager.fillReport(reporte, null, conn);
            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setTitle("Reporte completo de Movimiento");
            viewer.setVisible(true);

        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al generar el reporte.");
        }
    }
    }//GEN-LAST:event_btnReporteSalidaActionPerformed

    private void btnDescargarReportesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDescargarReportesActionPerformed
        // TODO add your handling code here:
        try {
            // PRIMERA PREGUNTA: Tipo de Reporte
            String[] opcionesReporte = {"Entradas", "Salidas", "Todo"};
            String tipoReporte = (String) JOptionPane.showInputDialog(
                null,
                "¿Qué tipo de reporte deseas descargar?",
                "Tipo de Reporte",
                JOptionPane.QUESTION_MESSAGE,
                null,
                opcionesReporte,
                opcionesReporte[0]
            );

             Connection conn = new Conexion().estableceConexion();
             
            if (tipoReporte == null) return; // Cancelado

            // SEGUNDA PREGUNTA: Por Fecha o Todo
            String[] opcionesFiltro = {"Por Fecha", "Todo"};
            String filtro = (String) JOptionPane.showInputDialog(
                null,
                "¿Deseas filtrar por fecha o ver todo?",
                "Filtro",
                JOptionPane.QUESTION_MESSAGE,
                null,
                opcionesFiltro,
                opcionesFiltro[0]
            );

            if (filtro == null) return;

            Map<String, Object> parametros = new HashMap<>();

            String rutaReporte = "";

            if (tipoReporte.equals("Entradas")) {
                if (filtro.equals("Por Fecha")) {
                    String fecha = JOptionPane.showInputDialog("Ingrese la fecha (YYYY-MM-DD):");
                    if (fecha == null || fecha.isEmpty()) return;
                    parametros.put("fecha", fecha);
                    rutaReporte = "src/Reportes/ReporteMovimientoFE.jasper";
                } else {
                    rutaReporte = "src/Reportes/ReporteMovimientoET.jasper";
                }
            } else if (tipoReporte.equals("Salidas")) {
                if (filtro.equals("Por Fecha")) {
                    String fecha = JOptionPane.showInputDialog("Ingrese la fecha (YYYY-MM-DD):");
                    if (fecha == null || fecha.isEmpty()) return;
                    parametros.put("fecha", fecha);
                    rutaReporte = "src/Reportes/ReporteMovimientoFS.jasper";
                } else {
                    rutaReporte = "src/Reportes/ReporteMovimientoSA.jasper";
                }
            } else if (tipoReporte.equals("Todo")) {
                rutaReporte = "src/Reportes/ReporteMovimientoEN.jasper";
            }

            // TERCERA PREGUNTA: Formato
            String[] opcionesFormato = {"PDF", "Excel"};
            String formato = (String) JOptionPane.showInputDialog(
                null,
                "¿En qué formato deseas el reporte?",
                "Formato de Exportación",
                JOptionPane.QUESTION_MESSAGE,
                null,
                opcionesFormato,
                opcionesFormato[0]
            );

            if (formato == null) return;

            // Cargar el reporte
            JasperPrint print = JasperFillManager.fillReport(rutaReporte, parametros, conn);

            // Ruta de salida
            String archivoSalida = "Reporte_" + tipoReporte + "_" + System.currentTimeMillis();

            if (formato.equals("PDF")) {
                JasperExportManager.exportReportToPdfFile(print, archivoSalida + ".pdf");
                JOptionPane.showMessageDialog(null, "¡Reporte exportado como PDF exitosamente!");
            } else if (formato.equals("Excel")) {
                JRXlsxExporter exporter = new JRXlsxExporter();
                exporter.setExporterInput(new SimpleExporterInput(print));
                exporter.setExporterOutput(new SimpleOutputStreamExporterOutput(archivoSalida + ".xlsx"));

                SimpleXlsxReportConfiguration configuration = new SimpleXlsxReportConfiguration();
                configuration.setOnePagePerSheet(false);
                configuration.setDetectCellType(true);
                configuration.setCollapseRowSpan(false);
                exporter.setConfiguration(configuration);

                exporter.exportReport();
                JOptionPane.showMessageDialog(null, "¡Reporte exportado como Excel exitosamente!");
            }

        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error al generar el reporte: " + ex.getMessage());
        }
    
    }//GEN-LAST:event_btnDescargarReportesActionPerformed
    
    private void cargarproducto() {
        Connection conn = null;
        try {
            conn = new Conexion().estableceConexion();
            String sql = "SELECT sku FROM codigos";
            PreparedStatement pstmt = conn.prepareStatement(sql);
            ResultSet rs = pstmt.executeQuery();

            cboItems.removeAllItems(); // Limpiar el combo box antes de agregar nuevos elementos

            while (rs.next()) {
                cboItems.addItem(rs.getString("sku"));
            }

            rs.close();
            pstmt.close();
        } catch (SQLException e) {
        } finally {
            if (conn != null) {
                try {
                    conn.close();
                } catch (SQLException e) {
                }
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Transacciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Transacciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Transacciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Transacciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Transacciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnDescargarReportes;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnReporteEntrada;
    private javax.swing.JButton btnReporteSalida;
    private javax.swing.JButton btnReportes;
    private javax.swing.JComboBox<String> cboItems;
    private javax.swing.JComboBox<String> cboTransaccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSpinner spinnerUno;
    private javax.swing.JTextField txtDescripcion;
    // End of variables declaration//GEN-END:variables
}
